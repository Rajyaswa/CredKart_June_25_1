{"name": "test_bankapp_SignUp_DDT_003", "status": "failed", "statusDetails": {"message": "AssertionError: Test Case Failed\nassert 'Fail' not in ['Fail', 'Pass', 'Fail', 'Pass', 'Fail', 'Pass']", "trace": "self = <Test_file_practice_SignUp_DDT_Excel_File.Test_BankApp_SignUp_DDT object at 0x0000015B87599E50>\ndriver_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"def407ff9bdbb8b042ba3213a6375a44\")>\n\n    def test_bankapp_SignUp_DDT_003(self, driver_setup):\n        driver = driver_setup\n        driver.get(\"https://apps.credence.in/login.html\")\n        driver.maximize_window()\n        print(\"Title of the page:\", driver.title)\n        sign_up = WebDriverWait(driver, 10).until(\n            expected_conditions.element_to_be_clickable((By.XPATH, '//*[@id=\"signUpLink\"]'))\n        )\n        driver.execute_script(\"arguments[0].scrollIntoView(true);\", sign_up)\n        sign_up.click()\n    \n        time.sleep(1)\n    \n        rows = Excel_utils.get_row_count(self.excel_file_path, self.sheet_name)\n        print(\"Total rows are:\", rows)\n        Result_List = []\n        for r in range(2, rows+1):\n    \n            username = Excel_utils.read_data_from_excel(self.excel_file_path, self.sheet_name, r, 2)\n            password = Excel_utils.read_data_from_excel(self.excel_file_path, self.sheet_name, r, 3)\n            email=Excel_utils.read_data_from_excel(self.excel_file_path,self.sheet_name,r,4)\n            phone=Excel_utils.read_data_from_excel(self.excel_file_path,self.sheet_name,r,5)\n            expected_result = Excel_utils.read_data_from_excel(self.excel_file_path, self.sheet_name, r, 6)\n    \n            print(f\"Username is: {username}\")\n            print(f\"Password is: {password}\")\n            print(f\"email is :{email}\")\n            print(f\"phone is :{phone}\")\n            print(f\"Expected Result is: {expected_result}\")\n    \n            # Enter Username\n            #time.sleep(3)\n            username_field = driver.find_element(By.ID, \"username\")\n            username_field.send_keys(username)\n    \n            # Enter Password\n            password_field = driver.find_element(By.NAME, \"password\")\n            password_field.send_keys(password)\n    \n            #Email field\n            email_field = driver.find_element(By.NAME,\"email\")\n            email_field.send_keys(email)\n    \n            #Phone Field\n            phone_field = driver.find_element(By.NAME,\"phone\")\n            phone_field.send_keys(phone)\n    \n            # Click on Create User Button\n    \n            create_user_button = driver.find_element(By.ID, \"createUserButton\")\n            driver.execute_script(\"arguments[0].scrollIntoView();\", create_user_button )\n            create_user_button .click()\n    \n    \n            # Verify the User login Successfully\n            wait = WebDriverWait(driver, 3)\n            try:\n                wait.until(\n                    expected_conditions.presence_of_element_located((By.XPATH, \"//h2[normalize-space()='Dashboard']\"))\n                    )\n                driver.find_element(By.XPATH, \"//h2[normalize-space()='Dashboard']\")\n                print(\"User login Successfully\")\n                # driver.save_screenshot(\"User login Successfully.png\")\n                actual_result = \"Pass\"\n                Excel_utils.write_data_to_excel(self.excel_file_path, self.sheet_name, r, 7, actual_result)\n                #time.sleep(3)\n    \n    \n                logout_button = driver.find_element(By.XPATH, \"//a[normalize-space()='Logout']\")\n                driver.execute_script(\"arguments[0].scrollIntoView();\", logout_button)\n                logout_button.click()\n            except:\n                print(\"User login Failed\")\n                # driver.save_screenshot(\"User login Failed.png\")\n                actual_result = \"Fail\"\n                Excel_utils.write_data_to_excel(self.excel_file_path, self.sheet_name, r, 7, actual_result)\n    \n            if actual_result == expected_result:\n                test_case_result = \"Pass\"\n                print(f\"Test Case Result is: {test_case_result}\")\n            else:\n                test_case_result = \"Fail\"\n                print(f\"Test Case Result is: {test_case_result}\")\n    \n            Excel_utils.write_data_to_excel(self.excel_file_path, self.sheet_name, r, 8, test_case_result)\n            Result_List.append(test_case_result)\n    \n        print(f\"Result List is: {Result_List}\")\n>       assert \"Fail\" not in Result_List, \"Test Case Failed\"\nE       AssertionError: Test Case Failed\nE       assert 'Fail' not in ['Fail', 'Pass', 'Fail', 'Pass', 'Fail', 'Pass']\n\nTest_Cases\\Test_file_practice_SignUp_DDT_Excel_File.py:105: AssertionError"}, "attachments": [{"name": "stdout", "source": "ff9e1b6e-742e-4cef-b45c-b08e590ab4e6-attachment.txt", "type": "text/plain"}], "start": 1750107697941, "stop": 1750107740552, "uuid": "8df4a341-2d34-4a60-9fb3-2be1f44a3b1e", "historyId": "18b6d7637131dc63039ea88e8a279315", "testCaseId": "18b6d7637131dc63039ea88e8a279315", "fullName": "Test_Cases.Test_file_practice_SignUp_DDT_Excel_File.Test_BankApp_SignUp_DDT#test_bankapp_SignUp_DDT_003", "labels": [{"name": "parentSuite", "value": "Test_Cases"}, {"name": "suite", "value": "Test_file_practice_SignUp_DDT_Excel_File"}, {"name": "subSuite", "value": "Test_BankApp_SignUp_DDT"}, {"name": "host", "value": "Electricion"}, {"name": "thread", "value": "8860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Cases.Test_file_practice_SignUp_DDT_Excel_File"}]}