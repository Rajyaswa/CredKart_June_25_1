{"name": "test_bankapp_login_params_002[bankapp_login_data1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=137.0.7151.104)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff67460fe75+79173]\n\tGetHandleVerifier [0x0x7ff67460fed0+79264]\n\t(No symbol) [0x0x7ff6743c9e5a]\n\t(No symbol) [0x0x7ff6743c6874]\n\t(No symbol) [0x0x7ff6743b7589]\n\t(No symbol) [0x0x7ff6743b9331]\n\t(No symbol) [0x0x7ff6743b78a6]\n\t(No symbol) [0x0x7ff6743b7306]\n\t(No symbol) [0x0x7ff6743b6fca]\n\t(No symbol) [0x0x7ff6743b4b9f]\n\t(No symbol) [0x0x7ff6743b541c]\n\t(No symbol) [0x0x7ff6743cde0a]\n\t(No symbol) [0x0x7ff674471dfe]\n\t(No symbol) [0x0x7ff67444896a]\n\t(No symbol) [0x0x7ff67447100d]\n\t(No symbol) [0x0x7ff674448743]\n\t(No symbol) [0x0x7ff6744114c1]\n\t(No symbol) [0x0x7ff674412253]\n\tGetHandleVerifier [0x0x7ff6748da2ad+3004797]\n\tGetHandleVerifier [0x0x7ff6748d46fd+2981325]\n\tGetHandleVerifier [0x0x7ff6748f3350+3107360]\n\tGetHandleVerifier [0x0x7ff67462a9fe+188622]\n\tGetHandleVerifier [0x0x7ff67463228f+219487]\n\tGetHandleVerifier [0x0x7ff674618dc4+115860]\n\tGetHandleVerifier [0x0x7ff674618f79+116297]\n\tGetHandleVerifier [0x0x7ff6745ff528+11256]\n\tBaseThreadInitThunk [0x0x7ffc565e7374+20]\n\tRtlUserThreadStart [0x0x7ffc569bcc91+33]", "trace": "self = <test_BankApp_Login_Params.Test_BankApp_Login_Params object at 0x00000259D0A93250>\ndriver_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b155107ead3c1fa8e03878454beb8394\")>\nbankapp_login_data = ('credence123111a', 'Credence@123987211', 'Fail')\n\n>   ???\n\nC:\\Users\\SMAK\\PycharmProjects\\03.Pytest Framework\\TestCases\\test_BankApp_Login_Params.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:472: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000259D0DC06E0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...ff6745ff528+11256]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffc565e7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffc569bcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=137.0.7151.104)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff67460fe75+79173]\nE       \tGetHandleVerifier [0x0x7ff67460fed0+79264]\nE       \t(No symbol) [0x0x7ff6743c9e5a]\nE       \t(No symbol) [0x0x7ff6743c6874]\nE       \t(No symbol) [0x0x7ff6743b7589]\nE       \t(No symbol) [0x0x7ff6743b9331]\nE       \t(No symbol) [0x0x7ff6743b78a6]\nE       \t(No symbol) [0x0x7ff6743b7306]\nE       \t(No symbol) [0x0x7ff6743b6fca]\nE       \t(No symbol) [0x0x7ff6743b4b9f]\nE       \t(No symbol) [0x0x7ff6743b541c]\nE       \t(No symbol) [0x0x7ff6743cde0a]\nE       \t(No symbol) [0x0x7ff674471dfe]\nE       \t(No symbol) [0x0x7ff67444896a]\nE       \t(No symbol) [0x0x7ff67447100d]\nE       \t(No symbol) [0x0x7ff674448743]\nE       \t(No symbol) [0x0x7ff6744114c1]\nE       \t(No symbol) [0x0x7ff674412253]\nE       \tGetHandleVerifier [0x0x7ff6748da2ad+3004797]\nE       \tGetHandleVerifier [0x0x7ff6748d46fd+2981325]\nE       \tGetHandleVerifier [0x0x7ff6748f3350+3107360]\nE       \tGetHandleVerifier [0x0x7ff67462a9fe+188622]\nE       \tGetHandleVerifier [0x0x7ff67463228f+219487]\nE       \tGetHandleVerifier [0x0x7ff674618dc4+115860]\nE       \tGetHandleVerifier [0x0x7ff674618f79+116297]\nE       \tGetHandleVerifier [0x0x7ff6745ff528+11256]\nE       \tBaseThreadInitThunk [0x0x7ffc565e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffc569bcc91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "attachments": [{"name": "stdout", "source": "3ce2974c-6b3c-4a57-a049-8867f88ced4f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "bankapp_login_data", "value": "('credence123111a', 'Credence@123987211', 'Fail')"}], "start": 1750107396817, "stop": 1750107427262, "uuid": "2ae1881f-3e58-4d71-aac4-816bddb52175", "historyId": "0c77712abd3a8386c3617500b3e51e48", "testCaseId": "f1904fd691d72bd98e6e204f24e2ef77", "fullName": "Test_Cases.test_BankApp_Login_Params.Test_BankApp_Login_Params#test_bankapp_login_params_002", "labels": [{"name": "parentSuite", "value": "Test_Cases"}, {"name": "suite", "value": "test_BankApp_Login_Params"}, {"name": "subSuite", "value": "Test_BankApp_Login_Params"}, {"name": "host", "value": "Electricion"}, {"name": "thread", "value": "5572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Cases.test_BankApp_Login_Params"}]}