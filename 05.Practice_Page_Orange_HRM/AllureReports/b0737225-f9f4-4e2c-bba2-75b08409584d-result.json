{"name": "test_Orange_HRM_Login_001", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bf42cda5+78885]\n\tGetHandleVerifier [0x0x7ff7bf42ce00+78976]\n\t(No symbol) [0x0x7ff7bf1e9bca]\n\t(No symbol) [0x0x7ff7bf240766]\n\t(No symbol) [0x0x7ff7bf240a1c]\n\t(No symbol) [0x0x7ff7bf294467]\n\t(No symbol) [0x0x7ff7bf268bcf]\n\t(No symbol) [0x0x7ff7bf29122f]\n\t(No symbol) [0x0x7ff7bf268963]\n\t(No symbol) [0x0x7ff7bf2316b1]\n\t(No symbol) [0x0x7ff7bf232443]\n\tGetHandleVerifier [0x0x7ff7bf704eed+3061101]\n\tGetHandleVerifier [0x0x7ff7bf6ff33d+3037629]\n\tGetHandleVerifier [0x0x7ff7bf71e592+3165202]\n\tGetHandleVerifier [0x0x7ff7bf44730e+186766]\n\tGetHandleVerifier [0x0x7ff7bf44eb3f+217535]\n\tGetHandleVerifier [0x0x7ff7bf4359b4+114740]\n\tGetHandleVerifier [0x0x7ff7bf435b69+115177]\n\tGetHandleVerifier [0x0x7ff7bf41c368+10728]\n\tBaseThreadInitThunk [0x0x7ffc565e7374+20]\n\tRtlUserThreadStart [0x0x7ffc569bcc91+33]", "trace": "self = <testCases.test_Orange_HRM_Login_Params_001.Test_User_Profile_Class object at 0x00000205156B9A70>\nget_data_for_login = ('wronguser', 'wrongpass', 'Fail')\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"orangehrm login\")\n    @allure.story(\"story: orangehrm Login\")\n    @allure.description(\"This test case is to validate orangehrmLogin functionality\")\n    @allure.issue(\"issue : https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n    @allure.link(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n    @allure.testcase(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\")\n    @allure.epic(\"Epic : OrangeHRM\")\n    @allure.sub_suite(\"OrangeHRM Login\")\n    @allure.title(\"test_Orange_HRM_Login_001\")\n    @pytest.mark.sanity\n    @pytest.mark.web\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    def test_Orange_HRM_Login_params_002(self, get_data_for_login):\n        self.log.info(\"Testcase test_CredKart_Login_002 is started\")\n        self.log.info(f\"Opening browser and landing on login page--{self.login_url}\")\n        self.driver.get(self.login_url)\n        self.lp = Login_Page_Class(self.driver)  # Object Creation\n    \n        self.username = get_data_for_login[0]\n        self.password = get_data_for_login[1]\n        self.expected_result = get_data_for_login[2]\n    \n        self.log.info(f\"Entering username--{self.username}\")\n>       self.lp.Enter_Username(self.username)\n\ntestCases\\test_Orange_HRM_Login_Params_001.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageObjects\\Login_Page.py:17: in Enter_Username\n    self.wait.until(EC.presence_of_element_located((By.NAME, self.text_username_id)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"827518bed1cf47bf5c2e602ef5044acd\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000020515B459E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7bf42cda5+78885]\nE       \tGetHandleVerifier [0x0x7ff7bf42ce00+78976]\nE       \t(No symbol) [0x0x7ff7bf1e9bca]\nE       \t(No symbol) [0x0x7ff7bf240766]\nE       \t(No symbol) [0x0x7ff7bf240a1c]\nE       \t(No symbol) [0x0x7ff7bf294467]\nE       \t(No symbol) [0x0x7ff7bf268bcf]\nE       \t(No symbol) [0x0x7ff7bf29122f]\nE       \t(No symbol) [0x0x7ff7bf268963]\nE       \t(No symbol) [0x0x7ff7bf2316b1]\nE       \t(No symbol) [0x0x7ff7bf232443]\nE       \tGetHandleVerifier [0x0x7ff7bf704eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff7bf6ff33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff7bf71e592+3165202]\nE       \tGetHandleVerifier [0x0x7ff7bf44730e+186766]\nE       \tGetHandleVerifier [0x0x7ff7bf44eb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff7bf4359b4+114740]\nE       \tGetHandleVerifier [0x0x7ff7bf435b69+115177]\nE       \tGetHandleVerifier [0x0x7ff7bf41c368+10728]\nE       \tBaseThreadInitThunk [0x0x7ffc565e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffc569bcc91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "This test case is to validate orangehrmLogin functionality", "attachments": [{"name": "log", "source": "5d50e81b-43c4-4d51-8ae3-094d548d42bd-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_data_for_login", "value": "('wronguser', 'wrongpass', 'Fail')"}], "start": 1750269414941, "stop": 1750269461505, "uuid": "f54858a3-1f49-4543-b320-153bc704ecc4", "historyId": "2ecbb98c70e5eb0e107fd7f940a4a6a4", "testCaseId": "bf331b416c3b8f12278fb56545f58917", "fullName": "testCases.test_Orange_HRM_Login_Params_001.Test_User_Profile_Class#test_Orange_HRM_Login_params_002", "labels": [{"name": "epic", "value": "Epic : OrangeHRM"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "orangehrm login"}, {"name": "story", "value": "story: orangehrm Login"}, {"name": "subSuite", "value": "OrangeHRM Login"}, {"name": "tag", "value": "web"}, {"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_Orange_HRM_Login_Params_001"}, {"name": "host", "value": "Electricion"}, {"name": "thread", "value": "18012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_Orange_HRM_Login_Params_001"}], "links": [{"type": "tms", "url": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login", "name": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login"}, {"type": "link", "url": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login", "name": "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login"}, {"type": "issue", "url": "issue : https://opensource-demo.orangehrmlive.com/web/index.php/auth/login", "name": "issue : https://opensource-demo.orangehrmlive.com/web/index.php/auth/login"}]}